lvim.autocommands["1"]["1"] = "BufEnter"
lvim.autocommands["1"]["2"].command = "set ft=eruby"
lvim.autocommands["1"]["2"].pattern = "*.erb"
lvim.autocommands["2"]["1"] = "BufWritePost"
lvim.autocommands["2"]["2"].command = "!erblint -a %"
lvim.autocommands["2"]["2"].pattern = "*.erb"
lvim.builtin.alpha.active = false
lvim.builtin.alpha.dashboard.section.buttons.entries["1"]["1"] = "SPC f"
lvim.builtin.alpha.dashboard.section.buttons.entries["1"]["2"] = "  Find File"
lvim.builtin.alpha.dashboard.section.buttons.entries["1"]["3"] = "<CMD>Telescope find_files<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["2"]["1"] = "SPC n"
lvim.builtin.alpha.dashboard.section.buttons.entries["2"]["2"] = "  New File"
lvim.builtin.alpha.dashboard.section.buttons.entries["2"]["3"] = "<CMD>ene!<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["3"]["1"] = "SPC P"
lvim.builtin.alpha.dashboard.section.buttons.entries["3"]["2"] = "  Recent Projects "
lvim.builtin.alpha.dashboard.section.buttons.entries["3"]["3"] = "<CMD>Telescope projects<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["4"]["1"] = "SPC s r"
lvim.builtin.alpha.dashboard.section.buttons.entries["4"]["2"] = "  Recently Used Files"
lvim.builtin.alpha.dashboard.section.buttons.entries["4"]["3"] = "<CMD>Telescope oldfiles<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["5"]["1"] = "SPC s t"
lvim.builtin.alpha.dashboard.section.buttons.entries["5"]["2"] = "  Find Word"
lvim.builtin.alpha.dashboard.section.buttons.entries["5"]["3"] = "<CMD>Telescope live_grep<CR>"
lvim.builtin.alpha.dashboard.section.buttons.entries["6"]["1"] = "SPC L c"
lvim.builtin.alpha.dashboard.section.buttons.entries["6"]["2"] = "  Configuration"
lvim.builtin.alpha.dashboard.section.buttons.entries["6"]["3"] = "<CMD>edit /home/nelson/.config/lvim/config.lua <CR>"
lvim.builtin.alpha.dashboard.section.footer.opts.hl = "Number"
lvim.builtin.alpha.dashboard.section.footer.opts.position = "center"
lvim.builtin.alpha.dashboard.section.footer.type = "text"
lvim.builtin.alpha.dashboard.section.footer.val["1"] = "                "
lvim.builtin.alpha.dashboard.section.footer.val["2"] = "          lunarvim.org"
lvim.builtin.alpha.dashboard.section.footer.val["3"] = "hotfix/remove-emmet-logic-e48cb7c"
lvim.builtin.alpha.dashboard.section.header.opts.hl = "Label"
lvim.builtin.alpha.dashboard.section.header.opts.position = "center"
lvim.builtin.alpha.dashboard.section.header.type = "text"
lvim.builtin.alpha.dashboard.section.header.val["1"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["10"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⡀⠀⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["11"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢺⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["12"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠉⠑⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["13"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡇⠀⠀⠀⠈⠑⠢⠄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠢⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["14"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠉⠐⠢⠄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡟⠀⠈⠑⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["15"] = "⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠒⠠⠤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⠁⠀⠀⢀⣼⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["16"] = "⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠒⠂⠤⠤⠀⣀⡀⠀⠀⠀⣼⣿⠇⠀⠀⢀⣸⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["17"] = "⠀⠀⠀⠀⠀⠀⣿⡟⠀⠀⠀⠀⠀⠀⣤⡄⠀⠀⠀⣠⣤⠀⠀⢠⣭⣀⣤⣤⣤⡀⠀⠀⠀⢀⣤⣤⣤⣤⡀⠀⠀⠀⢠⣤⢀⣤⣤⣄⠀⠀⣿⣿⠀⠉⣹⣿⠏⠉⠉⢱⣶⣶⣶⡦⠀⠀⠀⢠⣶⣦⣴⣦⣠⣴⣦⡀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["18"] = "⠀⠀⠀⠀⠀⢠⣿⡇⠀⠀⠀⠀⠀⢠⣿⠇⠀⠀⠀⣿⡇⠀⠀⣿⡿⠉⠀⠈⣿⣧⠀⠀⠰⠿⠋⠀⠀⢹⣿⠀⠀⠀⣿⡿⠋⠀⠹⠿⠀⠀⢻⣿⡇⢠⣿⡟⠀⠀⠀⠈⠉⢹⣿⡇⠀⠀⠀⢸⣿⡏⢹⣿⡏⢹⣿⡇⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["19"] = "⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⢸⣿⠀⠀⠀⢰⣿⠃⠀⢠⣿⡇⠀⠀⠀⣿⡇⠀⠀⣠⣴⡶⠶⠶⣿⣿⠀⠀⢠⣿⡇⠀⠀⠀⠀⠀⠀⢸⣿⣇⣿⡿⠀⠀⠀⠀⠀⠀⣿⣿⠁⠀⠀⠀⣿⣿⠀⣾⣿⠀⣾⣿⠁⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["2"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["20"] = "⠀⠀⠀⠀⠀⣿⣟⠀⠀⠀⠀⠀⠀⢻⣿⡀⠀⢀⣼⣿⠀⠀⢸⣿⠀⠀⠀⢰⣿⠇⠀⢰⣿⣇⠀⠀⣠⣿⡏⠀⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠁⠀⠀⠀⣀⣀⣠⣿⣿⣀⡀⠀⢠⣿⡟⢠⣿⡟⢀⣿⡿⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["21"] = "⠀⠀⠀⠀⠀⠛⠛⠛⠛⠛⠛⠁⠀⠈⠛⠿⠟⠋⠛⠃⠀⠀⠛⠛⠀⠀⠀⠘⠛⠀⠀⠀⠙⠿⠿⠛⠙⠛⠃⠀⠀⠚⠛⠀⠀⠀⠀⠀⠀⠀⠘⠿⠿⠃⠀⠀⠀⠀⠿⠿⠿⠿⠿⠿⠿⠀⠸⠿⠇⠸⠿⠇⠸⠿⠇⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["22"] = "                                                                                "
lvim.builtin.alpha.dashboard.section.header.val["3"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣶⣶⣶⣶⣶⣶⣶⣦⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["4"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣾⣿⠿⠛⠛⠉⠉⠉⠉⠉⠉⠉⠙⠛⠻⢿⣿⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["5"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⢿⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["6"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["7"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠈⠉⠉⠉⠉⠉⣹⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["8"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⣰⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.dashboard.section.header.val["9"] = "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠀⢰⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"
lvim.builtin.alpha.mode = "dashboard"
lvim.builtin.alpha.startify.section.bottom_buttons.entries["1"]["1"] = "q"
lvim.builtin.alpha.startify.section.bottom_buttons.entries["1"]["2"] = "Quit"
lvim.builtin.alpha.startify.section.bottom_buttons.entries["1"]["3"] = "<CMD>quit<CR>"
lvim.builtin.alpha.startify.section.footer.type = "group"
lvim.builtin.alpha.startify.section.header.opts.hl = "Label"
lvim.builtin.alpha.startify.section.header.opts.shrink_margin = false
lvim.builtin.alpha.startify.section.header.type = "text"
lvim.builtin.alpha.startify.section.header.val["1"] = "    __                          _    ___         "
lvim.builtin.alpha.startify.section.header.val["2"] = "   / /   __  ______  ____ _____| |  / (_)___ ___ "
lvim.builtin.alpha.startify.section.header.val["3"] = "  / /   / / / / __ \\/ __ `/ ___/ | / / / __ `__ \\"
lvim.builtin.alpha.startify.section.header.val["4"] = " / /___/ /_/ / / / / /_/ / /   | |/ / / / / / / /"
lvim.builtin.alpha.startify.section.header.val["5"] = "/_____/\\__,_/_/ /_/\\__,_/_/    |___/_/_/ /_/ /_/ "
lvim.builtin.alpha.startify.section.top_buttons.entries["1"]["1"] = "e"
lvim.builtin.alpha.startify.section.top_buttons.entries["1"]["2"] = "  New File"
lvim.builtin.alpha.startify.section.top_buttons.entries["1"]["3"] = "<CMD>ene!<CR>"
lvim.builtin.autopairs.active = true
lvim.builtin.autopairs.check_ts = true
lvim.builtin.autopairs.disable_filetype["1"] = "TelescopePrompt"
lvim.builtin.autopairs.disable_filetype["2"] = "spectre_panel"
lvim.builtin.autopairs.disable_in_macro = false
lvim.builtin.autopairs.disable_in_visualblock = false
lvim.builtin.autopairs.enable_afterquote = true
lvim.builtin.autopairs.enable_check_bracket_line = false
lvim.builtin.autopairs.enable_moveright = true
lvim.builtin.autopairs.fast_wrap.chars["1"] = "{"
lvim.builtin.autopairs.fast_wrap.chars["2"] = "["
lvim.builtin.autopairs.fast_wrap.chars["3"] = "("
lvim.builtin.autopairs.fast_wrap.chars["4"] = "\""
lvim.builtin.autopairs.fast_wrap.chars["5"] = "'"
lvim.builtin.autopairs.fast_wrap.check_comma = true
lvim.builtin.autopairs.fast_wrap.end_key = "$"
lvim.builtin.autopairs.fast_wrap.highlight_grey = "Comment"
lvim.builtin.autopairs.fast_wrap.highlight = "Search"
lvim.builtin.autopairs.fast_wrap.keys = "qwertyuiopzxcvbnmasdfghjkl"
lvim.builtin.autopairs.fast_wrap.map = "<M-e>"
lvim.builtin.autopairs.fast_wrap.offset = 0
lvim.builtin.autopairs.fast_wrap.pattern = "[%'%\"%)%>%]%)%}%,]"
lvim.builtin.autopairs.ignored_next_char = "[%w%%%'%[%\"%.]"
lvim.builtin.autopairs.map_bs = true
lvim.builtin.autopairs.map_char.all = "("
lvim.builtin.autopairs.map_char.tex = "{"
lvim.builtin.autopairs.map_c_w = false
-- lvim.builtin.autopairs.on_config_done = function ()
lvim.builtin.autopairs.ts_config.java = false
lvim.builtin.autopairs.ts_config.javascript["1"] = "string"
lvim.builtin.autopairs.ts_config.javascript["2"] = "template_string"
lvim.builtin.autopairs.ts_config.lua["1"] = "string"
lvim.builtin.autopairs.ts_config.lua["2"] = "source"
lvim.builtin.bufferline.active = true
lvim.builtin.bufferline.highlights.background.gui = "italic"
lvim.builtin.bufferline.highlights.buffer_selected.gui = "bold"
lvim.builtin.bufferline.options.always_show_bufferline = false
lvim.builtin.bufferline.options.buffer_close_icon = ""
lvim.builtin.bufferline.options.close_command = "bdelete! %d"
lvim.builtin.bufferline.options.close_icon = ""
-- lvim.builtin.bufferline.options.custom_filter = function ()
-- lvim.builtin.bufferline.options.diagnostics_indicator = function ()
lvim.builtin.bufferline.options.diagnostics = "nvim_lsp"
lvim.builtin.bufferline.options.diagnostics_update_in_insert = false
lvim.builtin.bufferline.options.enforce_regular_tabs = false
lvim.builtin.bufferline.options.indicator_icon = "▎"
lvim.builtin.bufferline.options.left_mouse_command = "buffer %d"
lvim.builtin.bufferline.options.left_trunc_marker = ""
lvim.builtin.bufferline.options.max_name_length = 18
lvim.builtin.bufferline.options.max_prefix_length = 15
lvim.builtin.bufferline.options.modified_icon = "●"
-- lvim.builtin.bufferline.options.name_formatter = function ()
lvim.builtin.bufferline.options.numbers = "none"
lvim.builtin.bufferline.options.offsets["1"].filetype = "undotree"
lvim.builtin.bufferline.options.offsets["1"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["1"].padding = 1
lvim.builtin.bufferline.options.offsets["1"].text = "Undotree"
lvim.builtin.bufferline.options.offsets["2"].filetype = "NvimTree"
lvim.builtin.bufferline.options.offsets["2"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["2"].padding = 1
lvim.builtin.bufferline.options.offsets["2"].text = "Explorer"
lvim.builtin.bufferline.options.offsets["3"].filetype = "DiffviewFiles"
lvim.builtin.bufferline.options.offsets["3"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["3"].padding = 1
lvim.builtin.bufferline.options.offsets["3"].text = "Diff View"
lvim.builtin.bufferline.options.offsets["4"].filetype = "flutterToolsOutline"
lvim.builtin.bufferline.options.offsets["4"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["4"].text = "Flutter Outline"
lvim.builtin.bufferline.options.offsets["5"].filetype = "packer"
lvim.builtin.bufferline.options.offsets["5"].highlight = "PanelHeading"
lvim.builtin.bufferline.options.offsets["5"].padding = 1
lvim.builtin.bufferline.options.offsets["5"].text = "Packer"
lvim.builtin.bufferline.options.persist_buffer_sort = true
lvim.builtin.bufferline.options.right_mouse_command = "vert sbuffer %d"
lvim.builtin.bufferline.options.right_trunc_marker = ""
lvim.builtin.bufferline.options.separator_style = "thin"
lvim.builtin.bufferline.options.show_buffer_close_icons = true
lvim.builtin.bufferline.options.show_buffer_icons = true
lvim.builtin.bufferline.options.show_close_icon = false
lvim.builtin.bufferline.options.show_tab_indicators = true
lvim.builtin.bufferline.options.sort_by = "id"
lvim.builtin.bufferline.options.tab_size = 18
lvim.builtin.cmp.completion.keyword_length = 1
lvim.builtin.cmp.confirm_opts.behavior = "replace"
lvim.builtin.cmp.confirm_opts.select = false
lvim.builtin.cmp.experimental.ghost_text = true
lvim.builtin.cmp.experimental.native_menu = false
lvim.builtin.cmp.formatting.duplicates.buffer = 1
lvim.builtin.cmp.formatting.duplicates_default = 0
lvim.builtin.cmp.formatting.duplicates.luasnip = 1
lvim.builtin.cmp.formatting.duplicates.nvim_lsp = 0
lvim.builtin.cmp.formatting.duplicates.path = 1
lvim.builtin.cmp.formatting.fields["1"] = "kind"
lvim.builtin.cmp.formatting.fields["2"] = "abbr"
lvim.builtin.cmp.formatting.fields["3"] = "menu"
-- lvim.builtin.cmp.formatting.format = function ()
lvim.builtin.cmp.formatting.kind_icons.Class = " "
lvim.builtin.cmp.formatting.kind_icons.Color = " "
lvim.builtin.cmp.formatting.kind_icons.Constant = "ﲀ "
lvim.builtin.cmp.formatting.kind_icons.Constructor = " "
lvim.builtin.cmp.formatting.kind_icons.EnumMember = " "
lvim.builtin.cmp.formatting.kind_icons.Enum = "練"
lvim.builtin.cmp.formatting.kind_icons.Event = " "
lvim.builtin.cmp.formatting.kind_icons.Field = " "
lvim.builtin.cmp.formatting.kind_icons.File = ""
lvim.builtin.cmp.formatting.kind_icons.Folder = " "
lvim.builtin.cmp.formatting.kind_icons.Function = " "
lvim.builtin.cmp.formatting.kind_icons.Interface = "ﰮ "
lvim.builtin.cmp.formatting.kind_icons.Keyword = " "
lvim.builtin.cmp.formatting.kind_icons.Method = " "
lvim.builtin.cmp.formatting.kind_icons.Module = " "
lvim.builtin.cmp.formatting.kind_icons.Operator = ""
lvim.builtin.cmp.formatting.kind_icons.Property = " "
lvim.builtin.cmp.formatting.kind_icons.Reference = " "
lvim.builtin.cmp.formatting.kind_icons.Snippet = " "
lvim.builtin.cmp.formatting.kind_icons.Struct = " "
lvim.builtin.cmp.formatting.kind_icons.Text = " "
lvim.builtin.cmp.formatting.kind_icons.TypeParameter = " "
lvim.builtin.cmp.formatting.kind_icons.Unit = "塞"
lvim.builtin.cmp.formatting.kind_icons.Value = " "
lvim.builtin.cmp.formatting.kind_icons.Variable = " "
lvim.builtin.cmp.formatting.max_width = 0
lvim.builtin.cmp.formatting.source_names.buffer = "(Buffer)"
lvim.builtin.cmp.formatting.source_names.calc = "(Calc)"
lvim.builtin.cmp.formatting.source_names.cmp_tabnine = "(Tabnine)"
lvim.builtin.cmp.formatting.source_names.copilot = "(Copilot)"
lvim.builtin.cmp.formatting.source_names.emmet = "(Emmet)"
lvim.builtin.cmp.formatting.source_names.emoji = "(Emoji)"
lvim.builtin.cmp.formatting.source_names.luasnip = "(Snippet)"
lvim.builtin.cmp.formatting.source_names.nvim_lsp = "(LSP)"
lvim.builtin.cmp.formatting.source_names.nvim_lsp_signature_help = "(Signature)"
lvim.builtin.cmp.formatting.source_names.path = "(Path)"
lvim.builtin.cmp.formatting.source_names.tmux = "(TMUX)"
lvim.builtin.cmp.formatting.source_names.vsnip = "(Snippet)"
-- lvim.builtin.cmp.mapping["<C-d>"] = function ()
-- lvim.builtin.cmp.mapping["<C-e>"] = function ()
-- lvim.builtin.cmp.mapping["<C-f>"] = function ()
-- lvim.builtin.cmp.mapping["<C-j>"] = function ()
-- lvim.builtin.cmp.mapping["<C-k>"] = function ()
-- lvim.builtin.cmp.mapping["<C-n>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-p>"].i = function ()
-- lvim.builtin.cmp.mapping["<CR>"].i = function ()
-- lvim.builtin.cmp.mapping["<C-Space>"] = function ()
-- lvim.builtin.cmp.mapping["<C-y>"].i = function ()
-- lvim.builtin.cmp.mapping["<Down>"].i = function ()
-- lvim.builtin.cmp.mapping["<S-Tab>"].i = function ()
-- lvim.builtin.cmp.mapping["<S-Tab>"].s = function ()
-- lvim.builtin.cmp.mapping["<Tab>"].i = function ()
-- lvim.builtin.cmp.mapping["<Tab>"].s = function ()
-- lvim.builtin.cmp.mapping["<Up>"].i = function ()
-- lvim.builtin.cmp.snippet.expand = function ()
lvim.builtin.cmp.sources["10"].name = "emoji"
lvim.builtin.cmp.sources["11"].name = "treesitter"
lvim.builtin.cmp.sources["12"].name = "crates"
lvim.builtin.cmp.sources["13"].name = "tmux"
lvim.builtin.cmp.sources["14"].name = "emmet"
lvim.builtin.cmp.sources["15"].name = "emoji"
lvim.builtin.cmp.sources["16"].name = "nvim_lsp_signature_help"
lvim.builtin.cmp.sources["1"].name = "copilot"
lvim.builtin.cmp.sources["2"].name = "nvim_lsp_signature_help"
lvim.builtin.cmp.sources["3"].name = "nvim_lsp"
lvim.builtin.cmp.sources["4"].name = "path"
lvim.builtin.cmp.sources["5"].name = "luasnip"
lvim.builtin.cmp.sources["6"].name = "cmp_tabnine"
lvim.builtin.cmp.sources["7"].name = "nvim_lua"
lvim.builtin.cmp.sources["8"].name = "buffer"
lvim.builtin.cmp.sources["9"].name = "calc"
lvim.builtin.cmp.window.completion.border = "rounded"
lvim.builtin.cmp.window.completion.col_offset = 0
lvim.builtin.cmp.window.completion.side_padding = 1
lvim.builtin.cmp.window.completion.winhighlight = "Normal:Normal,FloatBorder:Normal,CursorLine:Visual,Search:None"
lvim.builtin.cmp.window.completion.zindex = 1001
lvim.builtin.cmp.window.documentation.border = "rounded"
lvim.builtin.cmp.window.documentation.col_offset = 0
lvim.builtin.cmp.window.documentation.side_padding = 1
lvim.builtin.cmp.window.documentation.winhighlight = "Normal:Normal,FloatBorder:Normal,CursorLine:Visual,Search:None"
lvim.builtin.cmp.window.documentation.zindex = 1001
lvim.builtin.comment.active = false
lvim.builtin.comment.ignore = "^$"
lvim.builtin.comment.mappings.basic = true
lvim.builtin.comment.mappings.extended = false
lvim.builtin.comment.mappings.extra = true
lvim.builtin.comment.opleader.block = "gb"
lvim.builtin.comment.opleader.line = "gc"
lvim.builtin.comment.padding = true
-- lvim.builtin.comment.pre_hook = function ()
lvim.builtin.comment.toggler.block = "gbc"
lvim.builtin.comment.toggler.line = "gcc"
lvim.builtin.dap.active = true
lvim.builtin.dap.breakpoint.linehl = ""
lvim.builtin.dap.breakpoint.numhl = ""
lvim.builtin.dap.breakpoint_rejected.linehl = ""
lvim.builtin.dap.breakpoint_rejected.numhl = ""
lvim.builtin.dap.breakpoint_rejected.text = ""
lvim.builtin.dap.breakpoint_rejected.texthl = "LspDiagnosticsSignHint"
lvim.builtin.dap.breakpoint.text = ""
lvim.builtin.dap.breakpoint.texthl = "LspDiagnosticsSignError"
lvim.builtin.dap.stopped.linehl = "DiagnosticUnderlineInfo"
lvim.builtin.dap.stopped.numhl = "LspDiagnosticsSignInformation"
lvim.builtin.dap.stopped.text = ""
lvim.builtin.dap.stopped.texthl = "LspDiagnosticsSignInformation"
lvim.builtin.dashboard.active = false
lvim.builtin.dashboard.disable_at_vim_enter = 0
lvim.builtin.dashboard.search_handler = ""
lvim.builtin.dashboard.session_directory = ""
lvim.builtin.gitsigns.active = true
lvim.builtin.gitsigns.opts.attach_to_untracked = true
lvim.builtin.gitsigns.opts.current_line_blame = false
lvim.builtin.gitsigns.opts.current_line_blame_formatter_opts.relative_time = false
lvim.builtin.gitsigns.opts.current_line_blame_opts.delay = 1000
lvim.builtin.gitsigns.opts.current_line_blame_opts.ignore_whitespace = false
lvim.builtin.gitsigns.opts.current_line_blame_opts.virt_text_pos = "eol"
lvim.builtin.gitsigns.opts.current_line_blame_opts.virt_text = true
lvim.builtin.gitsigns.opts.keymaps.buffer = true
lvim.builtin.gitsigns.opts.keymaps.noremap = true
lvim.builtin.gitsigns.opts.linehl = false
lvim.builtin.gitsigns.opts.max_file_length = 40000
lvim.builtin.gitsigns.opts.numhl = false
lvim.builtin.gitsigns.opts.preview_config.border = "rounded"
lvim.builtin.gitsigns.opts.preview_config.col = 1
lvim.builtin.gitsigns.opts.preview_config.relative = "cursor"
lvim.builtin.gitsigns.opts.preview_config.row = 0
lvim.builtin.gitsigns.opts.preview_config.style = "minimal"
lvim.builtin.gitsigns.opts.signcolumn = true
lvim.builtin.gitsigns.opts.sign_priority = 6
lvim.builtin.gitsigns.opts.signs.add.hl = "GitSignsAdd"
lvim.builtin.gitsigns.opts.signs.add.linehl = "GitSignsAddLn"
lvim.builtin.gitsigns.opts.signs.add.numhl = "GitSignsAddNr"
lvim.builtin.gitsigns.opts.signs.add.text = "▎"
lvim.builtin.gitsigns.opts.signs.changedelete.hl = "GitSignsChange"
lvim.builtin.gitsigns.opts.signs.changedelete.linehl = "GitSignsChangeLn"
lvim.builtin.gitsigns.opts.signs.changedelete.numhl = "GitSignsChangeNr"
lvim.builtin.gitsigns.opts.signs.changedelete.text = "▎"
lvim.builtin.gitsigns.opts.signs.change.hl = "GitSignsChange"
lvim.builtin.gitsigns.opts.signs.change.linehl = "GitSignsChangeLn"
lvim.builtin.gitsigns.opts.signs.change.numhl = "GitSignsChangeNr"
lvim.builtin.gitsigns.opts.signs.change.text = "▎"
lvim.builtin.gitsigns.opts.signs.delete.hl = "GitSignsDelete"
lvim.builtin.gitsigns.opts.signs.delete.linehl = "GitSignsDeleteLn"
lvim.builtin.gitsigns.opts.signs.delete.numhl = "GitSignsDeleteNr"
lvim.builtin.gitsigns.opts.signs.delete.text = "契"
lvim.builtin.gitsigns.opts.signs.topdelete.hl = "GitSignsDelete"
lvim.builtin.gitsigns.opts.signs.topdelete.linehl = "GitSignsDeleteLn"
lvim.builtin.gitsigns.opts.signs.topdelete.numhl = "GitSignsDeleteNr"
lvim.builtin.gitsigns.opts.signs.topdelete.text = "契"
lvim.builtin.gitsigns.opts.update_debounce = 200
lvim.builtin.gitsigns.opts.watch_gitdir.follow_files = true
lvim.builtin.gitsigns.opts.watch_gitdir.interval = 1000
lvim.builtin.gitsigns.opts.word_diff = false
lvim.builtin.gitsigns.opts.yadm.enable = false
lvim.builtin.lualine.active = true
lvim.builtin.lualine.options.globalstatus = false
lvim.builtin.lualine.options.theme = "onedarker"
lvim.builtin.lualine.style = "lvim"
lvim.builtin.luasnip.sources.friendly_snippets = true
lvim.builtin.notify.active = false
lvim.builtin.notify.opts.background_colour = "Normal"
lvim.builtin.notify.opts.icons.DEBUG = ""
lvim.builtin.notify.opts.icons.ERROR = ""
lvim.builtin.notify.opts.icons.INFO = ""
lvim.builtin.notify.opts.icons.TRACE = "✎"
lvim.builtin.notify.opts.icons.WARN = ""
lvim.builtin.notify.opts.minimum_width = 50
lvim.builtin.notify.opts.render = "default"
lvim.builtin.notify.opts.stages = "slide"
lvim.builtin.notify.opts.timeout = 5000
lvim.builtin.nvimtree.active = true
lvim.builtin.nvimtree.setup.actions.change_dir.enable = true
lvim.builtin.nvimtree.setup.actions.change_dir.global = false
lvim.builtin.nvimtree.setup.actions.change_dir.restrict_above_cwd = false
lvim.builtin.nvimtree.setup.actions.open_file.quit_on_open = false
lvim.builtin.nvimtree.setup.actions.open_file.resize_window = false
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.enable = true
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["1"] = "nofile"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["2"] = "terminal"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["3"] = "help"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["1"] = "notify"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["2"] = "packer"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["3"] = "qf"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["4"] = "diff"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["5"] = "fugitive"
lvim.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["6"] = "fugitiveblame"
lvim.builtin.nvimtree.setup.actions.use_system_clipboard = true
lvim.builtin.nvimtree.setup.auto_reload_on_write = true
lvim.builtin.nvimtree._setup_called = true
lvim.builtin.nvimtree.setup.diagnostics.enable = true
lvim.builtin.nvimtree.setup.diagnostics.icons.error = ""
lvim.builtin.nvimtree.setup.diagnostics.icons.hint = ""
lvim.builtin.nvimtree.setup.diagnostics.icons.info = ""
lvim.builtin.nvimtree.setup.diagnostics.icons.warning = ""
lvim.builtin.nvimtree.setup.diagnostics.show_on_dirs = false
lvim.builtin.nvimtree.setup.disable_netrw = true
lvim.builtin.nvimtree.setup.filters.custom["1"] = "node_modules"
lvim.builtin.nvimtree.setup.filters.custom["2"] = "\\.cache"
lvim.builtin.nvimtree.setup.filters.dotfiles = false
lvim.builtin.nvimtree.setup.git.enable = true
lvim.builtin.nvimtree.setup.git.ignore = false
lvim.builtin.nvimtree.setup.git.timeout = 200
lvim.builtin.nvimtree.setup.hijack_cursor = false
lvim.builtin.nvimtree.setup.hijack_directories.auto_open = true
lvim.builtin.nvimtree.setup.hijack_directories.enable = true
lvim.builtin.nvimtree.setup.hijack_netrw = true
lvim.builtin.nvimtree.setup.hijack_unnamed_buffer_when_opening = false
lvim.builtin.nvimtree.setup.ignore_buffer_on_setup = false
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["1"] = "startify"
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["2"] = "dashboard"
lvim.builtin.nvimtree.setup.ignore_ft_on_setup["3"] = "alpha"
lvim.builtin.nvimtree.setup.log.enable = false
lvim.builtin.nvimtree.setup.log.truncate = false
lvim.builtin.nvimtree.setup.log.types.all = false
lvim.builtin.nvimtree.setup.log.types.config = false
lvim.builtin.nvimtree.setup.log.types.copy_paste = false
lvim.builtin.nvimtree.setup.log.types.diagnostics = false
lvim.builtin.nvimtree.setup.log.types.git = false
lvim.builtin.nvimtree.setup.log.types.profile = false
lvim.builtin.nvimtree.setup.open_on_setup = false
lvim.builtin.nvimtree.setup.open_on_setup_file = false
lvim.builtin.nvimtree.setup.open_on_tab = false
lvim.builtin.nvimtree.setup.renderer.highlight_git = true
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.default = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.folder.default = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.folder.empty = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.folder.empty_open = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.folder.open = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.folder.symlink = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.git.deleted = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.git.ignored = "◌"
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.git.renamed = "➜"
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.git.staged = "S"
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.git.unmerged = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.git.unstaged = ""
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.git.untracked = "U"
lvim.builtin.nvimtree.setup.renderer.icons.glyphs.symlink = ""
lvim.builtin.nvimtree.setup.renderer.icons.show.file = true
lvim.builtin.nvimtree.setup.renderer.icons.show.folder_arrow = true
lvim.builtin.nvimtree.setup.renderer.icons.show.folder = true
lvim.builtin.nvimtree.setup.renderer.icons.show.git = true
lvim.builtin.nvimtree.setup.renderer.icons.webdev_colors = true
lvim.builtin.nvimtree.setup.renderer.indent_markers.enable = false
lvim.builtin.nvimtree.setup.renderer.indent_markers.icons.corner = "└ "
lvim.builtin.nvimtree.setup.renderer.indent_markers.icons.edge = "│ "
lvim.builtin.nvimtree.setup.renderer.indent_markers.icons.none = "  "
lvim.builtin.nvimtree.setup.renderer.root_folder_modifier = ":t"
lvim.builtin.nvimtree.setup.respect_buf_cwd = true
lvim.builtin.nvimtree.setup.sort_by = "name"
lvim.builtin.nvimtree.setup.trash.cmd = "trash"
lvim.builtin.nvimtree.setup.trash.require_confirm = true
lvim.builtin.nvimtree.setup.update_cwd = true
lvim.builtin.nvimtree.setup.update_focused_file.enable = true
lvim.builtin.nvimtree.setup.update_focused_file.update_cwd = true
lvim.builtin.nvimtree.setup.view.height = 30
lvim.builtin.nvimtree.setup.view.hide_root_folder = false
lvim.builtin.nvimtree.setup.view.mappings.custom_only = false
lvim.builtin.nvimtree.setup.view.mappings.list["1"].action = "edit"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["1"] = "l"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["2"] = "<CR>"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].key["3"] = "o"
lvim.builtin.nvimtree.setup.view.mappings.list["1"].mode = "n"
lvim.builtin.nvimtree.setup.view.mappings.list["2"].action = "close_node"
lvim.builtin.nvimtree.setup.view.mappings.list["2"].key = "h"
lvim.builtin.nvimtree.setup.view.mappings.list["3"].action = "vsplit"
lvim.builtin.nvimtree.setup.view.mappings.list["3"].key = "v"
lvim.builtin.nvimtree.setup.view.mappings.list["4"].action = "cd"
lvim.builtin.nvimtree.setup.view.mappings.list["4"].key = "C"
-- lvim.builtin.nvimtree.setup.view.mappings.list["5"].action_cb = function ()
lvim.builtin.nvimtree.setup.view.mappings.list["5"].action = "telescope_find_files"
lvim.builtin.nvimtree.setup.view.mappings.list["5"].key = "gtf"
-- lvim.builtin.nvimtree.setup.view.mappings.list["6"].action_cb = function ()
lvim.builtin.nvimtree.setup.view.mappings.list["6"].action = "telescope_live_grep"
lvim.builtin.nvimtree.setup.view.mappings.list["6"].key = "gtg"
lvim.builtin.nvimtree.setup.view.number = false
lvim.builtin.nvimtree.setup.view.preserve_window_proportions = false
lvim.builtin.nvimtree.setup.view.relativenumber = false
lvim.builtin.nvimtree.setup.view.side = "left"
lvim.builtin.nvimtree.setup.view.signcolumn = "yes"
lvim.builtin.nvimtree.setup.view.width = 30
lvim.builtin.project.active = true
lvim.builtin.project.datapath = "/home/nelson/.cache/lvim"
lvim.builtin.project.detection_methods["1"] = "pattern"
lvim.builtin.project.manual_mode = false
lvim.builtin.project.patterns["1"] = ".git"
lvim.builtin.project.patterns["2"] = "_darcs"
lvim.builtin.project.patterns["3"] = ".hg"
lvim.builtin.project.patterns["4"] = ".bzr"
lvim.builtin.project.patterns["5"] = ".svn"
lvim.builtin.project.patterns["6"] = "Makefile"
lvim.builtin.project.patterns["7"] = "package.json"
lvim.builtin.project.show_hidden = false
lvim.builtin.project.silent_chdir = true
lvim.builtin.telescope.active = true
lvim.builtin.telescope.defaults.borderchars["1"] = "─"
lvim.builtin.telescope.defaults.borderchars["2"] = "│"
lvim.builtin.telescope.defaults.borderchars["3"] = "─"
lvim.builtin.telescope.defaults.borderchars["4"] = "│"
lvim.builtin.telescope.defaults.borderchars["5"] = "╭"
lvim.builtin.telescope.defaults.borderchars["6"] = "╮"
lvim.builtin.telescope.defaults.borderchars["7"] = "╯"
lvim.builtin.telescope.defaults.borderchars["8"] = "╰"
lvim.builtin.telescope.defaults.color_devicons = true
lvim.builtin.telescope.defaults.entry_prefix = "  "
lvim.builtin.telescope.defaults.initial_mode = "insert"
lvim.builtin.telescope.defaults.layout_config.horizontal.mirror = false
-- lvim.builtin.telescope.defaults.layout_config.horizontal.preview_width = function ()
lvim.builtin.telescope.defaults.layout_config.preview_cutoff = 120
lvim.builtin.telescope.defaults.layout_config.vertical.mirror = false
lvim.builtin.telescope.defaults.layout_config.width = 0.75
lvim.builtin.telescope.defaults.layout_strategy = "horizontal"
lvim.builtin.telescope.defaults.mappings.i["<C-c>"]["1"] = "close"
lvim.builtin.telescope.defaults.mappings.i["<C-j>"]["1"] = "cycle_history_next"
lvim.builtin.telescope.defaults.mappings.i["<C-k>"]["1"] = "cycle_history_prev"
lvim.builtin.telescope.defaults.mappings.i["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.defaults.mappings.i["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.defaults.mappings.i["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.defaults.mappings.i["<C-q>"]["2"] = "open_qflist"
-- lvim.builtin.telescope.defaults.mappings.i["<C-q>"].clear = function ()
lvim.builtin.telescope.defaults.mappings.i["<CR>"]["1"] = "select_default"
lvim.builtin.telescope.defaults.mappings.n["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.defaults.mappings.n["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.defaults.mappings.n["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.defaults.mappings.n["<C-q>"]["2"] = "open_qflist"
-- lvim.builtin.telescope.defaults.mappings.n["<C-q>"].clear = function ()
lvim.builtin.telescope.defaults.path_display.shorten = 5
lvim.builtin.telescope.defaults.prompt_prefix = " "
lvim.builtin.telescope.defaults.selection_caret = " "
lvim.builtin.telescope.defaults.selection_strategy = "reset"
lvim.builtin.telescope.defaults.set_env.COLORTERM = "truecolor"
lvim.builtin.telescope.defaults.sorting_strategy = "descending"
lvim.builtin.telescope.defaults.vimgrep_arguments["1"] = "rg"
lvim.builtin.telescope.defaults.vimgrep_arguments["2"] = "--color=never"
lvim.builtin.telescope.defaults.vimgrep_arguments["3"] = "--no-heading"
lvim.builtin.telescope.defaults.vimgrep_arguments["4"] = "--with-filename"
lvim.builtin.telescope.defaults.vimgrep_arguments["5"] = "--line-number"
lvim.builtin.telescope.defaults.vimgrep_arguments["6"] = "--column"
lvim.builtin.telescope.defaults.vimgrep_arguments["7"] = "--smart-case"
lvim.builtin.telescope.defaults.vimgrep_arguments["8"] = "--hidden"
lvim.builtin.telescope.defaults.vimgrep_arguments["9"] = "--glob=!.git/"
lvim.builtin.telescope.defaults.winblend = 0
lvim.builtin.telescope.extensions.fzf.case_mode = "smart_case"
lvim.builtin.telescope.extensions.fzf.fuzzy = true
lvim.builtin.telescope.extensions.fzf.override_file_sorter = true
lvim.builtin.telescope.extensions.fzf.override_generic_sorter = true
-- lvim.builtin.telescope.file_previewer = function ()
-- lvim.builtin.telescope.file_sorter = function ()
-- lvim.builtin.telescope.generic_sorter = function ()
-- lvim.builtin.telescope.grep_previewer = function ()
lvim.builtin.telescope.mappings.i["<C-c>"]["1"] = "close"
lvim.builtin.telescope.mappings.i["<C-j>"]["1"] = "cycle_history_next"
lvim.builtin.telescope.mappings.i["<C-k>"]["1"] = "cycle_history_prev"
lvim.builtin.telescope.mappings.i["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.mappings.i["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.mappings.i["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.mappings.i["<C-q>"]["2"] = "open_qflist"
-- lvim.builtin.telescope.mappings.i["<C-q>"].clear = function ()
lvim.builtin.telescope.mappings.i["<CR>"]["1"] = "select_default"
lvim.builtin.telescope.mappings.i["<CR>"]["2"] = "center"
-- lvim.builtin.telescope.mappings.i["<CR>"].clear = function ()
lvim.builtin.telescope.mappings.n["<C-n>"]["1"] = "move_selection_next"
lvim.builtin.telescope.mappings.n["<C-p>"]["1"] = "move_selection_previous"
lvim.builtin.telescope.mappings.n["<C-q>"]["1"] = "smart_send_to_qflist"
lvim.builtin.telescope.mappings.n["<C-q>"]["2"] = "open_qflist"
-- lvim.builtin.telescope.mappings.n["<C-q>"].clear = function ()
lvim.builtin.telescope.pickers.find_files.hidden = true
lvim.builtin.telescope.pickers.live_grep.only_sort_text = true
-- lvim.builtin.telescope.qflist_previewer = function ()
lvim.builtin.terminal.active = true
lvim.builtin.terminal.close_on_exit = true
lvim.builtin.terminal.direction = "float"
lvim.builtin.terminal.execs["1"]["1"] = "lazygit"
lvim.builtin.terminal.execs["1"]["2"] = "<leader>gg"
lvim.builtin.terminal.execs["1"]["3"] = "LazyGit"
lvim.builtin.terminal.execs["1"]["4"] = "float"
lvim.builtin.terminal.float_opts.border = "curved"
lvim.builtin.terminal.float_opts.highlights.background = "Normal"
lvim.builtin.terminal.float_opts.highlights.border = "Normal"
lvim.builtin.terminal.float_opts.winblend = 0
lvim.builtin.terminal.hide_numbers = true
lvim.builtin.terminal.insert_mappings = true
lvim.builtin.terminal.open_mapping = "<c-t>"
lvim.builtin.terminal.persist_size = false
lvim.builtin.terminal.shade_terminals = true
lvim.builtin.terminal.shading_factor = 2
lvim.builtin.terminal.shell = "/bin/bash"
lvim.builtin.terminal.size = 20
lvim.builtin.terminal.start_in_insert = true
lvim.builtin.treesitter.autotag.enable = false
lvim.builtin.treesitter.context_commentstring.config.css = "/* %s */"
lvim.builtin.treesitter.context_commentstring.config.html = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.config.json = ""
lvim.builtin.treesitter.context_commentstring.config.scss = "/* %s */"
lvim.builtin.treesitter.context_commentstring.config.svelte = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.config.typescript = "// %s"
lvim.builtin.treesitter.context_commentstring.config.vue = "<!-- %s -->"
lvim.builtin.treesitter.context_commentstring.enable_autocmd = false
lvim.builtin.treesitter.context_commentstring.enable = true
lvim.builtin.treesitter.highlight.additional_vim_regex_highlighting = false
lvim.builtin.treesitter.highlight.disable["1"] = "latex"
lvim.builtin.treesitter.highlight.enabled = true
lvim.builtin.treesitter.highlight.enable = true
lvim.builtin.treesitter.ignore_install["1"] = "kotlin"
lvim.builtin.treesitter.indent.disable["1"] = "yaml"
lvim.builtin.treesitter.indent.disable["2"] = "python"
lvim.builtin.treesitter.indent.enable = true
lvim.builtin.treesitter.matchup.enable = false
lvim.builtin.treesitter.playground.enable = true
lvim.builtin.treesitter.playground.keybindings.focus_language = "f"
lvim.builtin.treesitter.playground.keybindings.goto_node = "<cr>"
lvim.builtin.treesitter.playground.keybindings.show_help = "?"
lvim.builtin.treesitter.playground.keybindings.toggle_anonymous_nodes = "a"
lvim.builtin.treesitter.playground.keybindings.toggle_hl_groups = "i"
lvim.builtin.treesitter.playground.keybindings.toggle_injected_languages = "t"
lvim.builtin.treesitter.playground.keybindings.toggle_language_display = "I"
lvim.builtin.treesitter.playground.keybindings.toggle_query_editor = "o"
lvim.builtin.treesitter.playground.keybindings.unfocus_language = "F"
lvim.builtin.treesitter.playground.keybindings.update = "R"
lvim.builtin.treesitter.playground.persist_queries = false
lvim.builtin.treesitter.playground.updatetime = 25
lvim.builtin.treesitter.rainbow.enable = false
lvim.builtin.treesitter.rainbow.extended_mode = true
lvim.builtin.treesitter.rainbow.max_file_lines = 1000
lvim.builtin.treesitter.textobjects.select.enable = false
lvim.builtin.treesitter.textobjects.swap.enable = false
lvim.builtin.treesitter.textsubjects.enable = true
lvim.builtin.treesitter.textsubjects.keymaps[";"] = "textsubjects-big"
lvim.builtin.treesitter.textsubjects.keymaps["."] = "textsubjects-smart"
lvim.builtin.which_key.active = true
lvim.builtin.which_key.mappings[";"]["1"] = "<cmd>Alpha<CR>"
lvim.builtin.which_key.mappings[";"]["2"] = "Dashboard"
lvim.builtin.which_key.mappings.a["1"] = "<cmd>:e ~/.config/lvim/config.lua<cr>"
lvim.builtin.which_key.mappings.a["2"] = "Settings file"
lvim.builtin.which_key.mappings.b.b["1"] = "<cmd>BufferLineCyclePrev<cr>"
lvim.builtin.which_key.mappings.b.b["2"] = "Previous"
lvim.builtin.which_key.mappings.b.D["1"] = "<cmd>BufferLineSortByDirectory<cr>"
lvim.builtin.which_key.mappings.b.D["2"] = "Sort by directory"
lvim.builtin.which_key.mappings.b.e["1"] = "<cmd>BufferLinePickClose<cr>"
lvim.builtin.which_key.mappings.b.e["2"] = "Pick which buffer to close"
lvim.builtin.which_key.mappings.b.f["1"] = "<cmd>Telescope buffers<cr>"
lvim.builtin.which_key.mappings.b.f["2"] = "Find"
lvim.builtin.which_key.mappings.b.h["1"] = "<cmd>BufferLineCloseLeft<cr>"
lvim.builtin.which_key.mappings.b.h["2"] = "Close all to the left"
lvim.builtin.which_key.mappings.b.j["1"] = "<cmd>BufferLinePick<cr>"
lvim.builtin.which_key.mappings.b.j["2"] = "Jump"
lvim.builtin.which_key.mappings.b.l["1"] = "<cmd>BufferLineCloseRight<cr>"
lvim.builtin.which_key.mappings.b.L["1"] = "<cmd>BufferLineSortByExtension<cr>"
lvim.builtin.which_key.mappings.b.l["2"] = "Close all to the right"
lvim.builtin.which_key.mappings.b.L["2"] = "Sort by language"
lvim.builtin.which_key.mappings.b.name = "Buffers"
lvim.builtin.which_key.mappings.c["1"] = "<cmd>BufferKill<CR>"
lvim.builtin.which_key.mappings.c["2"] = "Close Buffer"
lvim.builtin.which_key.mappings.d.b["1"] = "<cmd>lua require'dap'.step_back()<cr>"
lvim.builtin.which_key.mappings.d.b["2"] = "Step Back"
lvim.builtin.which_key.mappings.d.c["1"] = "<cmd>lua require'dap'.continue()<cr>"
lvim.builtin.which_key.mappings.d.C["1"] = "<cmd>lua require'dap'.run_to_cursor()<cr>"
lvim.builtin.which_key.mappings.d.c["2"] = "Continue"
lvim.builtin.which_key.mappings.d.C["2"] = "Run To Cursor"
lvim.builtin.which_key.mappings.d.d["1"] = "<cmd>lua require'dap'.disconnect()<cr>"
lvim.builtin.which_key.mappings.d.d["2"] = "Disconnect"
lvim.builtin.which_key.mappings.d.g["1"] = "<cmd>lua require'dap'.session()<cr>"
lvim.builtin.which_key.mappings.d.g["2"] = "Get Session"
lvim.builtin.which_key.mappings.d.i["1"] = "<cmd>lua require'dap'.step_into()<cr>"
lvim.builtin.which_key.mappings.d.i["2"] = "Step Into"
lvim.builtin.which_key.mappings.d.name = "Debug"
lvim.builtin.which_key.mappings.d.o["1"] = "<cmd>lua require'dap'.step_over()<cr>"
lvim.builtin.which_key.mappings.d.o["2"] = "Step Over"
lvim.builtin.which_key.mappings.d.p["1"] = "<cmd>lua require'dap'.pause()<cr>"
lvim.builtin.which_key.mappings.d.p["2"] = "Pause"
lvim.builtin.which_key.mappings.d.q["1"] = "<cmd>lua require'dap'.close()<cr>"
lvim.builtin.which_key.mappings.d.q["2"] = "Quit"
lvim.builtin.which_key.mappings.d.r["1"] = "<cmd>lua require'dap'.repl.toggle()<cr>"
lvim.builtin.which_key.mappings.d.r["2"] = "Toggle Repl"
lvim.builtin.which_key.mappings.d.s["1"] = "<cmd>lua require'dap'.continue()<cr>"
lvim.builtin.which_key.mappings.d.s["2"] = "Start"
lvim.builtin.which_key.mappings.d.t["1"] = "<cmd>lua require'dap'.toggle_breakpoint()<cr>"
lvim.builtin.which_key.mappings.d.t["2"] = "Toggle Breakpoint"
lvim.builtin.which_key.mappings.d.u["1"] = "<cmd>lua require'dap'.step_out()<cr>"
lvim.builtin.which_key.mappings.d.u["2"] = "Step Out"
lvim.builtin.which_key.mappings.e["1"] = "<cmd>NvimTreeToggle<CR>"
lvim.builtin.which_key.mappings.e["2"] = "Explorer"
lvim.builtin.which_key.mappings.f.b["1"] = "<cmd>Telescope file_browser<cr>"
lvim.builtin.which_key.mappings.f.b["2"] = "File Browser"
lvim.builtin.which_key.mappings.f.c["1"] = "<cmd>Telescope git_commits<cr>"
lvim.builtin.which_key.mappings.f.c["2"] = "Commits"
lvim.builtin.which_key.mappings.f.d["1"] = "<cmd>Telescope dotfiles path=/home/nelson/.dotfiles<cr>"
lvim.builtin.which_key.mappings.f.d["2"] = "Neovim config"
lvim.builtin.which_key.mappings.f.f["1"] = "<cmd>Telescope find_files<cr>"
lvim.builtin.which_key.mappings.f.f["2"] = "File"
lvim.builtin.which_key.mappings.f.g["1"] = "<cmd>Telescope git_files<cr>"
lvim.builtin.which_key.mappings.f.g["2"] = "Git files"
lvim.builtin.which_key.mappings.f.h["1"] = "<cmd>Telescope help_tags<cr>"
lvim.builtin.which_key.mappings.f.h["2"] = "Tags"
lvim.builtin.which_key.mappings.f.j["1"] = "<cmd>Telescope jumplist<cr>"
lvim.builtin.which_key.mappings.f.j["2"] = "Jumplist"
lvim.builtin.which_key.mappings.f.m["1"] = "<cmd>Telescope git_status<cr>"
lvim.builtin.which_key.mappings.f.m["2"] = "Modified Files"
lvim.builtin.which_key.mappings.f.name = "Find"
lvim.builtin.which_key.mappings.f.q["1"] = "<cmd>Telescope quickfix<cr>"
lvim.builtin.which_key.mappings.f.q["2"] = "quickfix"
lvim.builtin.which_key.mappings.f.s["1"] = "<cmd>Telescope gosource<cr>"
lvim.builtin.which_key.mappings.f.s["2"] = "Go Source"
lvim.builtin.which_key.mappings.f.w["1"] = "<cmd>Telescope live_grep<cr>"
lvim.builtin.which_key.mappings.f.w["2"] = "Search word"
lvim.builtin.which_key.mappings.g.b["1"] = "<cmd>Telescope git_branches<cr>"
lvim.builtin.which_key.mappings.g.b["2"] = "Checkout branch"
lvim.builtin.which_key.mappings.g.C["1"] = "<cmd>Telescope git_bcommits<cr>"
lvim.builtin.which_key.mappings.g.c["1"] = "<cmd>Telescope git_commits<cr>"
lvim.builtin.which_key.mappings.g.c["2"] = "Checkout commit"
lvim.builtin.which_key.mappings.g.C["2"] = "Checkout commit(for current file)"
lvim.builtin.which_key.mappings.g.d["1"] = "<cmd>Gitsigns diffthis HEAD<cr>"
lvim.builtin.which_key.mappings.g.d["2"] = "Git Diff"
lvim.builtin.which_key.mappings.g.j["1"] = "<cmd>lua require 'gitsigns'.next_hunk()<cr>"
lvim.builtin.which_key.mappings.g.j["2"] = "Next Hunk"
lvim.builtin.which_key.mappings.g.k["1"] = "<cmd>lua require 'gitsigns'.prev_hunk()<cr>"
lvim.builtin.which_key.mappings.g.k["2"] = "Prev Hunk"
lvim.builtin.which_key.mappings.g.l["1"] = "<cmd>lua require 'gitsigns'.blame_line()<cr>"
lvim.builtin.which_key.mappings.g.l["2"] = "Blame"
lvim.builtin.which_key.mappings.g.name = "Git"
lvim.builtin.which_key.mappings.g.o["1"] = "<cmd>Telescope git_status<cr>"
lvim.builtin.which_key.mappings.g.o["2"] = "Open changed file"
lvim.builtin.which_key.mappings.g.p["1"] = "<cmd>lua require 'gitsigns'.preview_hunk()<cr>"
lvim.builtin.which_key.mappings.g.p["2"] = "Preview Hunk"
lvim.builtin.which_key.mappings.g.R["1"] = "<cmd>lua require 'gitsigns'.reset_buffer()<cr>"
lvim.builtin.which_key.mappings.g.r["1"] = "<cmd>lua require 'gitsigns'.reset_hunk()<cr>"
lvim.builtin.which_key.mappings.g.R["2"] = "Reset Buffer"
lvim.builtin.which_key.mappings.g.r["2"] = "Reset Hunk"
lvim.builtin.which_key.mappings.g.s["1"] = "<cmd>lua require 'gitsigns'.stage_hunk()<cr>"
lvim.builtin.which_key.mappings.g.s["2"] = "Stage Hunk"
lvim.builtin.which_key.mappings.g.u["1"] = "<cmd>lua require 'gitsigns'.undo_stage_hunk()<cr>"
lvim.builtin.which_key.mappings.g.u["2"] = "Undo Stage Hunk"
lvim.builtin.which_key.mappings.h.c["1"] = "<cmd>lua require('harpoon.mark').clear_all()<cr>"
lvim.builtin.which_key.mappings.h.c["2"] = "Clear all"
lvim.builtin.which_key.mappings.h.d["1"] = "<cmd>lua require('harpoon.mark').rm_file()<cr>"
lvim.builtin.which_key.mappings.h.d["2"] = "Delete mark"
lvim.builtin.which_key.mappings.h.g["1"] = "<cmd>lua require('harpoon.ui').toggle_quick_menu()<cr>"
lvim.builtin.which_key.mappings.h.g["2"] = "Go"
lvim.builtin.which_key.mappings.h.m["1"] = "<cmd>lua require('harpoon.mark').add_file()<cr>"
lvim.builtin.which_key.mappings.h.m["2"] = "Mark"
lvim.builtin.which_key.mappings.h.name = "harpoon"
lvim.builtin.which_key.mappings.l.a["1"] = "<cmd>lua vim.lsp.buf.code_action()<cr>"
lvim.builtin.which_key.mappings.l.a["2"] = "Code Action"
lvim.builtin.which_key.mappings.L.c["1"] = "<cmd>edit /home/nelson/.config/lvim/config.lua<cr>"
lvim.builtin.which_key.mappings.L.c["2"] = "Edit config.lua"
lvim.builtin.which_key.mappings.l.d["1"] = "<cmd>Telescope diagnostics bufnr=0 theme=get_ivy<cr>"
lvim.builtin.which_key.mappings.l.d["2"] = "Buffer Diagnostics"
lvim.builtin.which_key.mappings.l.e["1"] = "<cmd>Telescope quickfix<cr>"
lvim.builtin.which_key.mappings.l.e["2"] = "Telescope Quickfix"
lvim.builtin.which_key.mappings.L.f["1"] = "<cmd>lua require('lvim.core.telescope.custom-finders').find_lunarvim_files()<cr>"
-- lvim.builtin.which_key.mappings.l.f["1"] = function ()
lvim.builtin.which_key.mappings.L.f["2"] = "Find LunarVim files"
lvim.builtin.which_key.mappings.l.f["2"] = "Format"
lvim.builtin.which_key.mappings.L.g["1"] = "<cmd>lua require('lvim.core.telescope.custom-finders').grep_lunarvim_files()<cr>"
lvim.builtin.which_key.mappings.L.g["2"] = "Grep LunarVim files"
lvim.builtin.which_key.mappings.l.i["1"] = "<cmd>LspInfo<cr>"
lvim.builtin.which_key.mappings.l.I["1"] = "<cmd>LspInstallInfo<cr>"
lvim.builtin.which_key.mappings.L.i["1"] = "<cmd>lua require('lvim.core.info').toggle_popup(vim.bo.filetype)<cr>"
lvim.builtin.which_key.mappings.L.I["1"] = "<cmd>lua require('lvim.core.telescope.custom-finders').view_lunarvim_changelog()<cr>"
lvim.builtin.which_key.mappings.l.i["2"] = "Info"
lvim.builtin.which_key.mappings.l.I["2"] = "Installer Info"
lvim.builtin.which_key.mappings.L.i["2"] = "Toggle LunarVim Info"
lvim.builtin.which_key.mappings.L.I["2"] = "View LunarVim's changelog"
-- lvim.builtin.which_key.mappings.l.j["1"] = function ()
lvim.builtin.which_key.mappings.l.j["2"] = "Next Diagnostic"
lvim.builtin.which_key.mappings.L.k["1"] = "<cmd>Telescope keymaps<cr>"
-- lvim.builtin.which_key.mappings.l.k["1"] = function ()
lvim.builtin.which_key.mappings.l.k["2"] = "Prev Diagnostic"
lvim.builtin.which_key.mappings.L.k["2"] = "View LunarVim's keymappings"
-- lvim.builtin.which_key.mappings.l.l["1"] = function ()
lvim.builtin.which_key.mappings.l.l["2"] = "CodeLens Action"
lvim.builtin.which_key.mappings.L.l.d["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view(require('lvim.core.log').get_path())<cr>"
lvim.builtin.which_key.mappings.L.l.D["1"] = "<cmd>lua vim.fn.execute('edit ' .. require('lvim.core.log').get_path())<cr>"
lvim.builtin.which_key.mappings.L.l.D["2"] = "Open the default logfile"
lvim.builtin.which_key.mappings.L.l.d["2"] = "view default log"
lvim.builtin.which_key.mappings.L.l.l["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view(vim.lsp.get_log_path())<cr>"
lvim.builtin.which_key.mappings.L.l.L["1"] = "<cmd>lua vim.fn.execute('edit ' .. vim.lsp.get_log_path())<cr>"
lvim.builtin.which_key.mappings.L.l.L["2"] = "Open the LSP logfile"
lvim.builtin.which_key.mappings.L.l.l["2"] = "view lsp log"
lvim.builtin.which_key.mappings.L.l.N["1"] = "<cmd>edit $NVIM_LOG_FILE<cr>"
lvim.builtin.which_key.mappings.L.l.n["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view(os.getenv('NVIM_LOG_FILE'))<cr>"
lvim.builtin.which_key.mappings.L.l.N["2"] = "Open the Neovim logfile"
lvim.builtin.which_key.mappings.L.l.n["2"] = "view neovim log"
lvim.builtin.which_key.mappings.L.l.name = "+logs"
lvim.builtin.which_key.mappings.L.l.P["1"] = "<cmd>edit $LUNARVIM_CACHE_DIR/packer.nvim.log<cr>"
lvim.builtin.which_key.mappings.L.l.p["1"] = "<cmd>lua require('lvim.core.terminal').toggle_log_view(get_cache_dir() .. '/packer.nvim.log')<cr>"
lvim.builtin.which_key.mappings.L.l.P["2"] = "Open the Packer logfile"
lvim.builtin.which_key.mappings.L.l.p["2"] = "view packer log"
lvim.builtin.which_key.mappings.ln["1"] = "<cmd>lua vim.diagnostic.enable()<cr>"
lvim.builtin.which_key.mappings.L.n["1"] = "<cmd>Telescope notify<cr>"
lvim.builtin.which_key.mappings.ln["2"] = "Turn diagnostics ON"
lvim.builtin.which_key.mappings.L.n["2"] = "View Notifications"
lvim.builtin.which_key.mappings.l.name = "LSP"
lvim.builtin.which_key.mappings.L.name = "+LunarVim"
lvim.builtin.which_key.mappings.lo["1"] = "<cmd>lua vim.diagnostic.disable()<cr>"
lvim.builtin.which_key.mappings.lo["2"] = "Turn diagnostics OFF"
lvim.builtin.which_key.mappings.l.p.d["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('definition')<cr>"
lvim.builtin.which_key.mappings.l.p.d["2"] = "Definition"
lvim.builtin.which_key.mappings.l.p.i["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('implementation')<cr>"
lvim.builtin.which_key.mappings.l.p.i["2"] = "Implementation"
lvim.builtin.which_key.mappings.l.p.name = "Peek"
lvim.builtin.which_key.mappings.l.p.t["1"] = "<cmd>lua require('lvim.lsp.peek').Peek('typeDefinition')<cr>"
lvim.builtin.which_key.mappings.l.p.t["2"] = "Type Definition"
-- lvim.builtin.which_key.mappings.l.q["1"] = function ()
lvim.builtin.which_key.mappings.l.q["2"] = "Quickfix"
lvim.builtin.which_key.mappings.L.r["1"] = "<cmd>LvimReload<cr>"
-- lvim.builtin.which_key.mappings.l.r["1"] = function ()
lvim.builtin.which_key.mappings.L.r["2"] = "Reload LunarVim's configuration"
lvim.builtin.which_key.mappings.l.r["2"] = "Rename"
lvim.builtin.which_key.mappings.l.s["1"] = "<cmd>Telescope lsp_document_symbols<cr>"
lvim.builtin.which_key.mappings.l.S["1"] = "<cmd>Telescope lsp_dynamic_workspace_symbols<cr>"
lvim.builtin.which_key.mappings.l.s["2"] = "Document Symbols"
lvim.builtin.which_key.mappings.l.S["2"] = "Workspace Symbols"
lvim.builtin.which_key.mappings.L.u["1"] = "<cmd>LvimUpdate<cr>"
lvim.builtin.which_key.mappings.L.u["2"] = "Update LunarVim"
lvim.builtin.which_key.mappings.l.w["1"] = "<cmd>Telescope diagnostics<cr>"
lvim.builtin.which_key.mappings.l.w["2"] = "Diagnostics"
lvim.builtin.which_key.mappings.m["1"] = "<cmd>lua require('harpoon.mark').toggle_file()<cr>"
lvim.builtin.which_key.mappings.m["2"] = "toggle mark"
lvim.builtin.which_key.mappings.o["1"] = "<cmd>SymbolsOutline<cr>"
lvim.builtin.which_key.mappings.o["2"] = "Outline"
lvim.builtin.which_key.mappings.p.c["1"] = "<cmd>PackerCompile<cr>"
lvim.builtin.which_key.mappings.p.c["2"] = "Compile"
lvim.builtin.which_key.mappings.p.i["1"] = "<cmd>PackerInstall<cr>"
lvim.builtin.which_key.mappings.p.i["2"] = "Install"
lvim.builtin.which_key.mappings.p.name = "Packer"
lvim.builtin.which_key.mappings.p.r["1"] = "<cmd>lua require('lvim.plugin-loader').recompile()<cr>"
lvim.builtin.which_key.mappings.p.r["2"] = "Re-compile"
lvim.builtin.which_key.mappings.p.S["1"] = "<cmd>PackerStatus<cr>"
lvim.builtin.which_key.mappings.p.s["1"] = "<cmd>PackerSync<cr>"
lvim.builtin.which_key.mappings.p.S["2"] = "Status"
lvim.builtin.which_key.mappings.p.s["2"] = "Sync"
lvim.builtin.which_key.mappings.p.u["1"] = "<cmd>PackerUpdate<cr>"
lvim.builtin.which_key.mappings.p.u["2"] = "Update"
lvim.builtin.which_key.mappings.r.a["1"] = "<cmd>ReekAll<cr>"
lvim.builtin.which_key.mappings.r.a["2"] = "ReekAll"
lvim.builtin.which_key.mappings.r.name = "reek"
lvim.builtin.which_key.mappings.r.r["1"] = "<cmd>ReekThis<cr>"
lvim.builtin.which_key.mappings.r.r["2"] = "Run reek on this file"
lvim.builtin.which_key.mappings.s.b["1"] = "<cmd>Telescope git_branches<cr>"
lvim.builtin.which_key.mappings.s.b["2"] = "Checkout branch"
lvim.builtin.which_key.mappings.s.c["1"] = "<cmd>Telescope colorscheme<cr>"
lvim.builtin.which_key.mappings.s.C["1"] = "<cmd>Telescope commands<cr>"
lvim.builtin.which_key.mappings.s.c["2"] = "Colorscheme"
lvim.builtin.which_key.mappings.s.C["2"] = "Commands"
lvim.builtin.which_key.mappings.s.f["1"] = "<cmd>Telescope find_files<cr>"
lvim.builtin.which_key.mappings.s.f["2"] = "Find File"
lvim.builtin.which_key.mappings.s.h["1"] = "<cmd>Telescope help_tags<cr>"
lvim.builtin.which_key.mappings.s.H["1"] = "<cmd>Telescope highlights<cr>"
lvim.builtin.which_key.mappings.s.h["2"] = "Find Help"
lvim.builtin.which_key.mappings.s.H["2"] = "Find highlight groups"
lvim.builtin.which_key.mappings.s.k["1"] = "<cmd>Telescope keymaps<cr>"
lvim.builtin.which_key.mappings.s.k["2"] = "Keymaps"
lvim.builtin.which_key.mappings.s.M["1"] = "<cmd>Telescope man_pages<cr>"
lvim.builtin.which_key.mappings.s.M["2"] = "Man Pages"
lvim.builtin.which_key.mappings.s.name = "Search"
lvim.builtin.which_key.mappings.s.p["1"] = "<cmd>lua require('telescope.builtin.internal').colorscheme({enable_preview = true})<cr>"
lvim.builtin.which_key.mappings.s.p["2"] = "Colorscheme with Preview"
lvim.builtin.which_key.mappings.s.r["1"] = "<cmd>Telescope oldfiles<cr>"
lvim.builtin.which_key.mappings.s.R["1"] = "<cmd>Telescope registers<cr>"
lvim.builtin.which_key.mappings.s.r["2"] = "Open Recent File"
lvim.builtin.which_key.mappings.s.R["2"] = "Registers"
lvim.builtin.which_key.mappings.s.t["1"] = "<cmd>Telescope live_grep<cr>"
lvim.builtin.which_key.mappings.s.t["2"] = "Text"
lvim.builtin.which_key.mappings.t.f["1"] = "<cmd>TestFile<cr>"
lvim.builtin.which_key.mappings.t.f["2"] = "Test File"
lvim.builtin.which_key.mappings.T.i["1"] = ":TSConfigInfo<cr>"
lvim.builtin.which_key.mappings.T.i["2"] = "Info"
lvim.builtin.which_key.mappings.t.l["1"] = "<cmd>TestLast<cr>"
lvim.builtin.which_key.mappings.t.l["2"] = "Test Last"
lvim.builtin.which_key.mappings.t.n["1"] = "<cmd>TestNearest<cr>"
lvim.builtin.which_key.mappings.t.n["2"] = "Test Nearest"
lvim.builtin.which_key.mappings.t.name = "Test"
lvim.builtin.which_key.mappings.T.name = "Treesitter"
lvim.builtin.which_key.mappings.t.s["1"] = "<cmd>TestSuite<cr>"
lvim.builtin.which_key.mappings.t.s["2"] = "Test Suite"
lvim.builtin.which_key.mappings.t.v["1"] = "<cmd>TestVisit<cr>"
lvim.builtin.which_key.mappings.t.v["2"] = "Test Visit"
lvim.builtin.which_key.mappings.w["1"] = "<cmd>w!<CR>"
lvim.builtin.which_key.mappings.w["2"] = "Save"
lvim.builtin.which_key.opts.mode = "n"
lvim.builtin.which_key.opts.noremap = true
lvim.builtin.which_key.opts.nowait = true
lvim.builtin.which_key.opts.prefix = "<leader>"
lvim.builtin.which_key.opts.silent = true
lvim.builtin.which_key.setup.hidden["1"] = "<silent>"
lvim.builtin.which_key.setup.hidden["2"] = "<cmd>"
lvim.builtin.which_key.setup.hidden["3"] = "<Cmd>"
lvim.builtin.which_key.setup.hidden["4"] = "<CR>"
lvim.builtin.which_key.setup.hidden["5"] = "call"
lvim.builtin.which_key.setup.hidden["6"] = "lua"
lvim.builtin.which_key.setup.hidden["7"] = "^:"
lvim.builtin.which_key.setup.hidden["8"] = "^ "
lvim.builtin.which_key.setup.icons.breadcrumb = "»"
lvim.builtin.which_key.setup.icons.group = "+"
lvim.builtin.which_key.setup.icons.separator = "➜"
lvim.builtin.which_key.setup.ignore_missing = false
lvim.builtin.which_key.setup.layout.align = "left"
lvim.builtin.which_key.setup.layout.height.max = 25
lvim.builtin.which_key.setup.layout.height.min = 4
lvim.builtin.which_key.setup.layout.spacing = 3
lvim.builtin.which_key.setup.layout.width.max = 50
lvim.builtin.which_key.setup.layout.width.min = 20
lvim.builtin.which_key.setup.plugins.marks = true
lvim.builtin.which_key.setup.plugins.presets.g = true
lvim.builtin.which_key.setup.plugins.presets.motions = false
lvim.builtin.which_key.setup.plugins.presets.nav = true
lvim.builtin.which_key.setup.plugins.presets.operators = false
lvim.builtin.which_key.setup.plugins.presets.text_objects = false
lvim.builtin.which_key.setup.plugins.presets.windows = false
lvim.builtin.which_key.setup.plugins.presets.z = true
lvim.builtin.which_key.setup.plugins.registers = true
lvim.builtin.which_key.setup.plugins.spelling.enabled = true
lvim.builtin.which_key.setup.plugins.spelling.suggestions = 20
lvim.builtin.which_key.setup.popup_mappings.scroll_down = "<c-d>"
lvim.builtin.which_key.setup.popup_mappings.scroll_up = "<c-u>"
lvim.builtin.which_key.setup.show_help = true
lvim.builtin.which_key.setup.triggers = "auto"
lvim.builtin.which_key.setup.triggers_blacklist.i["1"] = "j"
lvim.builtin.which_key.setup.triggers_blacklist.i["2"] = "k"
lvim.builtin.which_key.setup.triggers_blacklist.v["1"] = "j"
lvim.builtin.which_key.setup.triggers_blacklist.v["2"] = "k"
lvim.builtin.which_key.setup.window.border = "single"
lvim.builtin.which_key.setup.window.margin["1"] = 1
lvim.builtin.which_key.setup.window.margin["2"] = 0
lvim.builtin.which_key.setup.window.margin["3"] = 1
lvim.builtin.which_key.setup.window.margin["4"] = 0
lvim.builtin.which_key.setup.window.padding["1"] = 2
lvim.builtin.which_key.setup.window.padding["2"] = 2
lvim.builtin.which_key.setup.window.padding["3"] = 2
lvim.builtin.which_key.setup.window.padding["4"] = 2
lvim.builtin.which_key.setup.window.position = "bottom"
lvim.builtin.which_key.setup.window.winblend = 0
lvim.builtin.which_key.vmappings["/"]["1"] = "<ESC><CMD>lua require('Comment.api').toggle_linewise_op(vim.fn.visualmode())<CR>"
lvim.builtin.which_key.vmappings["/"]["2"] = "Comment"
lvim.builtin.which_key.vopts.mode = "v"
lvim.builtin.which_key.vopts.noremap = true
lvim.builtin.which_key.vopts.nowait = true
lvim.builtin.which_key.vopts.prefix = "<leader>"
lvim.builtin.which_key.vopts.silent = true
lvim.colorscheme = "onedarker"
lvim.format_on_save = true
lvim.keys.normal_mode["<A-Down>"] = ":lua require('harpoon.ui').nav_next()<CR>"
lvim.keys.normal_mode["<A-Left>"] = ":BufferLineCyclePrev<CR>"
lvim.keys.normal_mode["<A-Right>"] = ":BufferLineCycleNext<CR>"
lvim.keys.normal_mode["<A-Up>"] = ":lua require('harpoon.ui').nav_prev()<CR>"
lvim.keys.normal_mode.H = "H"
lvim.keys.normal_mode.L = "L"
lvim.leader = "space"
lvim.line_wrap_cursor_movement = false
lvim.log.level = "warn"
lvim.log.override_notify = false
lvim.log.viewer.cmd = "lnav"
lvim.log.viewer.layout_config.direction = "horizontal"
lvim.log.viewer.layout_config.open_mapping = ""
lvim.log.viewer.layout_config.size = 40
lvim.lsp.automatic_configuration.skipped_filetypes["1"] = "markdown"
lvim.lsp.automatic_configuration.skipped_filetypes["2"] = "rst"
lvim.lsp.automatic_configuration.skipped_filetypes["3"] = "plaintext"
lvim.lsp.automatic_configuration.skipped_servers["10"] = "eslintls"
lvim.lsp.automatic_configuration.skipped_servers["11"] = "golangci_lint_ls"
lvim.lsp.automatic_configuration.skipped_servers["12"] = "graphql"
lvim.lsp.automatic_configuration.skipped_servers["13"] = "jedi_language_server"
lvim.lsp.automatic_configuration.skipped_servers["14"] = "ltex"
lvim.lsp.automatic_configuration.skipped_servers["15"] = "ocamlls"
lvim.lsp.automatic_configuration.skipped_servers["16"] = "phpactor"
lvim.lsp.automatic_configuration.skipped_servers["17"] = "psalm"
lvim.lsp.automatic_configuration.skipped_servers["18"] = "pylsp"
lvim.lsp.automatic_configuration.skipped_servers["19"] = "quick_lint_js"
lvim.lsp.automatic_configuration.skipped_servers["1"] = "angularls"
lvim.lsp.automatic_configuration.skipped_servers["20"] = "rome"
lvim.lsp.automatic_configuration.skipped_servers["21"] = "reason_ls"
lvim.lsp.automatic_configuration.skipped_servers["22"] = "scry"
lvim.lsp.automatic_configuration.skipped_servers["23"] = "solang"
lvim.lsp.automatic_configuration.skipped_servers["24"] = "solidity_ls"
lvim.lsp.automatic_configuration.skipped_servers["25"] = "sorbet"
lvim.lsp.automatic_configuration.skipped_servers["26"] = "sourcekit"
lvim.lsp.automatic_configuration.skipped_servers["27"] = "sourcery"
lvim.lsp.automatic_configuration.skipped_servers["28"] = "spectral"
lvim.lsp.automatic_configuration.skipped_servers["29"] = "sqlls"
lvim.lsp.automatic_configuration.skipped_servers["2"] = "ansiblels"
lvim.lsp.automatic_configuration.skipped_servers["30"] = "sqls"
lvim.lsp.automatic_configuration.skipped_servers["31"] = "stylelint_lsp"
lvim.lsp.automatic_configuration.skipped_servers["32"] = "tailwindcss"
lvim.lsp.automatic_configuration.skipped_servers["33"] = "tflint"
lvim.lsp.automatic_configuration.skipped_servers["34"] = "svlangserver"
lvim.lsp.automatic_configuration.skipped_servers["35"] = "verible"
lvim.lsp.automatic_configuration.skipped_servers["36"] = "vuels"
lvim.lsp.automatic_configuration.skipped_servers["37"] = "solargraph"
lvim.lsp.automatic_configuration.skipped_servers["3"] = "ccls"
lvim.lsp.automatic_configuration.skipped_servers["4"] = "csharp_ls"
lvim.lsp.automatic_configuration.skipped_servers["5"] = "cssmodules_ls"
lvim.lsp.automatic_configuration.skipped_servers["6"] = "denols"
lvim.lsp.automatic_configuration.skipped_servers["7"] = "ember"
lvim.lsp.automatic_configuration.skipped_servers["8"] = "emmet_ls"
lvim.lsp.automatic_configuration.skipped_servers["9"] = "eslint"
lvim.lsp.automatic_servers_installation = true
-- lvim.lsp.buffer_mappings.normal_mode.gd["1"] = function ()
-- lvim.lsp.buffer_mappings.normal_mode.gD["1"] = function ()
lvim.lsp.buffer_mappings.normal_mode.gD["2"] = "Goto declaration"
lvim.lsp.buffer_mappings.normal_mode.gd["2"] = "Goto Definition"
-- lvim.lsp.buffer_mappings.normal_mode.gI["1"] = function ()
lvim.lsp.buffer_mappings.normal_mode.gI["2"] = "Goto Implementation"
-- lvim.lsp.buffer_mappings.normal_mode.gl["1"] = function ()
lvim.lsp.buffer_mappings.normal_mode.gl["2"] = "Show line diagnostics"
-- lvim.lsp.buffer_mappings.normal_mode.gp["1"] = function ()
lvim.lsp.buffer_mappings.normal_mode.gp["2"] = "Peek definition"
lvim.lsp.buffer_mappings.normal_mode.gr["1"] = "<cmd>Telescope lsp_references<cr>"
lvim.lsp.buffer_mappings.normal_mode.gr["2"] = "Go to Definiton"
-- lvim.lsp.buffer_mappings.normal_mode.gs["1"] = function ()
lvim.lsp.buffer_mappings.normal_mode.gs["2"] = "show signature help"
-- lvim.lsp.buffer_mappings.normal_mode.K["1"] = function ()
lvim.lsp.buffer_mappings.normal_mode.K["2"] = "Show hover"
lvim.lsp.code_lens_refresh = true
lvim.lsp.diagnostics.float.border = "rounded"
lvim.lsp.diagnostics.float.focusable = false
-- lvim.lsp.diagnostics.float.format = function ()
lvim.lsp.diagnostics.float.header = ""
lvim.lsp.diagnostics.float.prefix = ""
lvim.lsp.diagnostics.float.source = "always"
lvim.lsp.diagnostics.float.style = "minimal"
lvim.lsp.diagnostics.severity_sort = true
lvim.lsp.diagnostics.signs.active = true
lvim.lsp.diagnostics.signs.values["1"].name = "DiagnosticSignError"
lvim.lsp.diagnostics.signs.values["1"].text = ""
lvim.lsp.diagnostics.signs.values["2"].name = "DiagnosticSignWarn"
lvim.lsp.diagnostics.signs.values["2"].text = ""
lvim.lsp.diagnostics.signs.values["3"].name = "DiagnosticSignHint"
lvim.lsp.diagnostics.signs.values["3"].text = ""
lvim.lsp.diagnostics.signs.values["4"].name = "DiagnosticSignInfo"
lvim.lsp.diagnostics.signs.values["4"].text = ""
lvim.lsp.diagnostics.underline = true
lvim.lsp.diagnostics.update_in_insert = false
lvim.lsp.diagnostics.virtual_text = true
lvim.lsp.document_highlight = true
lvim.lsp.float.border = "rounded"
lvim.lsp.float.focusable = true
lvim.lsp.float.style = "minimal"
lvim.lsp.installer.setup.ui.icons.server_installed = "✓"
lvim.lsp.installer.setup.ui.icons.server_pending = ""
lvim.lsp.installer.setup.ui.icons.server_uninstalled = "✗"
lvim.lsp.nlsp_settings.setup.append_default_schemas = true
lvim.lsp.nlsp_settings.setup.config_home = "/home/nelson/.config/lvim/lsp-settings"
lvim.lsp.nlsp_settings.setup.loader = "json"
lvim.lsp.peek.context = 10
lvim.lsp.peek.max_height = 15
lvim.lsp.peek.max_width = 30
lvim.lsp.templates_dir = "/home/nelson/.local/share/lunarvim/site/after/ftplugin"
lvim.plugins["10"]["1"] = "mg979/vim-visual-multi"
-- lvim.plugins["10"].config = function ()
lvim.plugins["11"]["1"] = "hrsh7th/cmp-nvim-lsp-signature-help"
lvim.plugins["1"]["1"] = "hrsh7th/cmp-emoji"
lvim.plugins["12"]["1"] = "vim-test/vim-test"
lvim.plugins["12"].cmd["1"] = "TestNearest"
lvim.plugins["12"].cmd["2"] = "TestFile"
lvim.plugins["12"].cmd["3"] = "TestSuite"
lvim.plugins["12"].cmd["4"] = "TestLast"
lvim.plugins["12"].cmd["5"] = "TestVisit"
-- lvim.plugins["12"].config = function ()
lvim.plugins["13"]["1"] = "rhysd/devdocs.vim"
lvim.plugins["13"].cmd["1"] = "DevDocs"
lvim.plugins["13"].cmd["2"] = "DevDocsAll"
lvim.plugins["14"]["1"] = "phaazon/hop.nvim"
lvim.plugins["14"].as = "hop"
-- lvim.plugins["14"].config = function ()
lvim.plugins["14"].keys["1"] = "s"
lvim.plugins["14"].keys["2"] = "S"
lvim.plugins["15"]["1"] = "norcalli/nvim-colorizer.lua"
-- lvim.plugins["15"].config = function ()
lvim.plugins["16"]["1"] = "junegunn/vim-easy-align"
-- lvim.plugins["16"].setup = function ()
lvim.plugins["17"]["1"] = "tpope/vim-dispatch"
lvim.plugins["17"].cmd["1"] = "Dispatch"
lvim.plugins["18"]["1"] = "tpope/vim-commentary"
lvim.plugins["19"]["1"] = "tpope/vim-surround"
lvim.plugins["20"]["1"] = "tpope/vim-repeat"
lvim.plugins["21"]["1"] = "unblevable/quick-scope"
lvim.plugins["2"]["1"] = "lad/vim-reek"
lvim.plugins["22"]["1"] = "tpope/vim-fugitive"
lvim.plugins["22"].cmd["10"] = "GRemove"
lvim.plugins["22"].cmd["11"] = "GRename"
lvim.plugins["22"].cmd["12"] = "Glgrep"
lvim.plugins["22"].cmd["13"] = "Gedit"
lvim.plugins["22"].cmd["1"] = "G"
lvim.plugins["22"].cmd["2"] = "Git"
lvim.plugins["22"].cmd["3"] = "Gdiffsplit"
lvim.plugins["22"].cmd["4"] = "Gread"
lvim.plugins["22"].cmd["5"] = "Gwrite"
lvim.plugins["22"].cmd["6"] = "Ggrep"
lvim.plugins["22"].cmd["7"] = "GMove"
lvim.plugins["22"].cmd["8"] = "GDelete"
lvim.plugins["22"].cmd["9"] = "GBrowse"
lvim.plugins["23"]["1"] = "tpope/vim-rails"
lvim.plugins["23"].cmd["10"] = "Tmodel"
lvim.plugins["23"].cmd["11"] = "Tview"
lvim.plugins["23"].cmd["12"] = "Tcontroller"
lvim.plugins["23"].cmd["13"] = "Rails"
lvim.plugins["23"].cmd["14"] = "Generate"
lvim.plugins["23"].cmd["15"] = "Runner"
lvim.plugins["23"].cmd["16"] = "Extract"
lvim.plugins["23"].cmd["1"] = "Eview"
lvim.plugins["23"].cmd["2"] = "Econtroller"
lvim.plugins["23"].cmd["3"] = "Emodel"
lvim.plugins["23"].cmd["4"] = "Smodel"
lvim.plugins["23"].cmd["5"] = "Sview"
lvim.plugins["23"].cmd["6"] = "Scontroller"
lvim.plugins["23"].cmd["7"] = "Vmodel"
lvim.plugins["23"].cmd["8"] = "Vview"
lvim.plugins["23"].cmd["9"] = "Vcontroller"
lvim.plugins["24"]["1"] = "kevinhwang91/nvim-bqf"
lvim.plugins["24"].event["1"] = "BufRead"
lvim.plugins["24"].event["2"] = "BufNew"
lvim.plugins["25"]["1"] = "iamcco/markdown-preview.nvim"
-- lvim.plugins["25"].config = function ()
lvim.plugins["25"].ft = "markdown"
lvim.plugins["25"].run = ":call mkdp#util#install()"
lvim.plugins["26"]["1"] = "sindrets/diffview.nvim"
lvim.plugins["26"].cmd["1"] = "DiffviewOpen"
lvim.plugins["26"].cmd["2"] = "DiffViewClose"
lvim.plugins["26"].cmd["3"] = "DiffviewToggleFiles"
lvim.plugins["26"].cmd["4"] = "DiffviewFocusFiles"
lvim.plugins["26"].cmd["5"] = "DiffviewRefresh"
-- lvim.plugins["26"].config = function ()
lvim.plugins["27"]["1"] = "mattn/emmet-vim"
lvim.plugins["27"].ft["1"] = "html"
lvim.plugins["27"].ft["2"] = "css"
lvim.plugins["27"].ft["3"] = "eruby"
lvim.plugins["27"].ft["4"] = "javascript"
lvim.plugins["28"]["1"] = "aca/emmet-ls"
lvim.plugins["28"].ft["1"] = "html"
lvim.plugins["28"].ft["2"] = "typescriptreact"
lvim.plugins["28"].ft["3"] = "javascriptreact"
lvim.plugins["28"].ft["4"] = "css"
lvim.plugins["28"].ft["5"] = "sass"
lvim.plugins["28"].ft["6"] = "scss"
lvim.plugins["28"].ft["7"] = "less"
lvim.plugins["28"].ft["8"] = "eruby"
lvim.plugins["29"]["1"] = "jackieaskins/cmp-emmet"
lvim.plugins["29"].run = "npm run release"
lvim.plugins["30"]["1"] = "ThePrimeagen/harpoon"
lvim.plugins["31"]["1"] = "RishabhRD/nvim-cheat.sh"
lvim.plugins["31"].cmd["1"] = "Cheat"
lvim.plugins["31"].cmd["2"] = "CheatWithoutComments"
lvim.plugins["3"]["1"] = "nanotee/luv-vimdocs"
lvim.plugins["31"].requires["1"] = "RishabhRD/popfix"
lvim.plugins["31"].requires.opt = true
lvim.plugins["4"]["1"] = "milisims/nvim-luaref"
lvim.plugins["5"]["1"] = "duane9/nvim-rg"
lvim.plugins["6"]["1"] = "zbirenbaum/copilot.lua"
-- lvim.plugins["6"].config = function ()
lvim.plugins["6"].event["1"] = "VimEnter"
lvim.plugins["7"]["1"] = "zbirenbaum/copilot-cmp"
lvim.plugins["7"].after["1"] = "copilot.lua"
lvim.plugins["7"].after["2"] = "nvim-cmp"
lvim.plugins["8"]["1"] = "windwp/nvim-ts-autotag"
-- lvim.plugins["8"].config = function ()
lvim.plugins["9"]["1"] = "editorconfig/editorconfig-vim"
-- lvim.plugins["9"].config = function ()
lvim.transparent_window = false
lvim.use_icons = true
